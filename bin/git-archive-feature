#!/usr/bin/env bash
# git-work
#
# command: git archive-feature

# Exit on command error.
set -o errexit

# ask
# checks the prompt for yes or no responses.
# @TODO: Move this to the helpers later.
ask() {
    while true; do
        read -p "$1 " yn
        case $yn in
            [Yy]* ) return 0;;
            [Nn]* ) return 1;;
            * ) echo "Please answer yes or no.";;
        esac
    done
}

FEATUREBRANCH=$(git symbolic-ref HEAD 2>/dev/null | cut -d"/" -f 3,4)

# If you are not on a feature branch, exit.
if [ '' == "$FEATUREBRANCH" ]; then

    echo "Branch name required."
    exit

# If current branch is named master, staging, or develop, you stop it right now.
elif [ 'master' = "$FEATUREBRANCH" ] && [ 'staging' = "$FEATUREBRANCH" ] && [ 'develop' = "$FEATUREBRANCH" ]; then

    echo "You're on $FEATUREBRANCH. So !nope."
    exit

# If current branch is not named master, staging, or develop, archive it.
elif [ 'master' != "$FEATUREBRANCH" ] && [ 'staging' != "$FEATUREBRANCH" ] && [ 'develop' != "$FEATUREBRANCH" ]; then

    echo "Pushing up the latest of ${FEATUREBRANCH}..."
    git push --set-upstream origin $FEATUREBRANCH

    echo "Tagging ${FEATUREBRANCH}..."
    git tag archive/$FEATUREBRANCH

    echo "Pushing 'archive/${FEATUREBRANCH}' tag to origin..."
    git push origin --tags

    echo "Switching to branch master..."
    git checkout master

    echo "Now, we can delete ${FEATUREBRANCH}..."

    # I normally comment out these prompts, because I only archive feature branches
    # after it has been deployed & tested on production.
    if [ 'master' != "$FEATUREBRANCH" ] && [ 'staging' != "$FEATUREBRANCH" ] && [ 'develop' != "$FEATUREBRANCH" ]; then
        if ask "Do you want to delete the local ${FEATUREBRANCH} branch?"; then

            git branch -D $FEATUREBRANCH --verbose
            echo "Deleted local branch ${FEATUREBRANCH}."

        fi
        if ask "Do you want to delete the remote ${FEATUREBRANCH} branch?"; then

            git push origin :$FEATUREBRANCH --verbose
            echo "Deleted remote branch ${FEATUREBRANCH}."

        fi
    fi
    echo "==========================================================="
    echo "Archived: ${FEATUREBRANCH}"
fi
exit
